"use strict";(self.webpackChunksrc=self.webpackChunksrc||[]).push([[16],{423:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(4848),r=t(8453);const i={description:"Syntax of Config Files"},s="Config Syntax",o={id:"Config/Config-Spec",title:"Config Syntax",description:"Syntax of Config Files",source:"@site/docs/01-Config/00-Config-Spec.md",sourceDirName:"01-Config",slug:"/Config/Config-Spec",permalink:"/Config/Config-Spec",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{description:"Syntax of Config Files"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/"},next:{title:"Overview",permalink:"/Modules/Modules"}},l={},c=[];function d(e){const n={code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"config-syntax",children:"Config Syntax"})}),"\n",(0,a.jsxs)(n.p,{children:["We used the ",(0,a.jsx)(n.code,{children:"yaml"})," file format for config with some slight enhancement - the ",(0,a.jsx)(n.code,{children:"!include"}),", ",(0,a.jsx)(n.code,{children:"!include_dataset"})," and ",(0,a.jsx)(n.code,{children:"!flatten"})," tags."]}),"\n",(0,a.jsxs)(n.p,{children:["When using ",(0,a.jsx)(n.code,{children:"Utility.Config.load_config"})," to read ",(0,a.jsx)(n.code,{children:"yaml"})," file, the parser will have following action when the aforementioned tags are met:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"!include <PATH>.yaml"})," will read the yaml file specified as the argument and directly concatenate the content into the position of ",(0,a.jsx)(n.code,{children:"!include"})," tag. If you are using relative path, the working directory is the directory that the ",(0,a.jsx)(n.code,{children:"yaml"})," file you are trying to load."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"!include_dataset <DATASET_PATH>.yaml"})," will read the yaml file specified as the argument, ",(0,a.jsx)(n.em,{children:"decompress"})," the file, and concatenate a sequence of sequence configurations into the position of ",(0,a.jsx)(n.code,{children:"!include_dataset"})," tag. The file included by ",(0,a.jsx)(n.code,{children:"!include_dataset"})," must begin with magic header of ",(0,a.jsx)(n.code,{children:"#*IS_DATASET_TYPE*#"})," and have the format of"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="Dataset.yaml"',children:"#*IS_DATASET_TYPE*#\r\ntype: SEQ_TYPE\r\ndataroot: /data2/datasets/wenshanw/tartanair_test_release/stereo/\r\n\r\n# Arbitrary keys that are shared across all sequences\r\nshared_key: some_value\r\n\r\nroots:\r\n- root: SE000\r\n    # Arbitrary keys that are specific to each sequence\r\n    private_key: seq_id_1\r\n    \r\n- root: SE001\r\n    # Arbitrary keys that are specific to each sequence\r\n    private_key: seq_id_2\n"})}),"\n",(0,a.jsx)(n.p,{children:"Will be translated into"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="Actually_Loaded.yaml"',children:"- type: SEQ_TYPE\r\n  dataroot: /data2/datasets/wenshanw/tartanair_test_release/stereo/SE000\r\n  private_key: seq_id_1\r\n  shared_key: some_value\r\n\r\n- type: SEQ_TYPE\r\n  dataroot: /data2/datasets/wenshanw/tartanair_test_release/stereo/SE001\r\n  private_key: seq_id_2\r\n  shared_key: some_value\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"!flatten"}),' is used directly on a sequence (list) in yaml and will flatten the nested sequence into a "flat" sequence.']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="Dataset.yaml"',children:"arrays: !flatten\r\n    - - a\r\n      - b\r\n    - c\n"})}),"\n",(0,a.jsx)(n.p,{children:"Will be translated to"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="Acutally_Loaded.yaml"',children:"arrays:\r\n    - a\r\n    - b\r\n    - c\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);