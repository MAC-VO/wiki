"use strict";(self.webpackChunksrc=self.webpackChunksrc||[]).push([[135],{7827:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var o=i(4848),r=i(8453);const t={},s="IObservationCov",a={id:"Modules/IObservationCov",title:"IObservationCov",description:"Converts uncertainty on image plane (matching uncertainty and depth uncertainty) to 3D space for each keypoint. Corresponds to the section III.C in the MAC-VO paper.",source:"@site/docs/02-Modules/07-IObservationCov.md",sourceDirName:"02-Modules",slug:"/Modules/IObservationCov",permalink:"/wiki/Modules/IObservationCov",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IObservationFilter",permalink:"/wiki/Modules/IObservationFilter"},next:{title:"Extend MAC-VO",permalink:"/wiki/category/extend-mac-vo"}},c={},d=[{value:"Interface",id:"interface",level:2},{value:"Methods to Implement",id:"methods-to-implement",level:3},{value:"Implementations",id:"implementations",level:2},{value:"Modifiers",id:"modifiers",level:2}];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"iobservationcov",children:"IObservationCov"})}),"\n",(0,o.jsx)(n.p,{children:"Converts uncertainty on image plane (matching uncertainty and depth uncertainty) to 3D space for each keypoint. Corresponds to the section III.C in the MAC-VO paper."}),"\n",(0,o.jsx)(n.h2,{id:"interface",children:"Interface"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-py",metastring:'title="Module/Covariance/ObserveCov.py"',children:"class IObservationCov(ABC, ConfigTestableSubclass):\r\n    def __init__(self, config: SimpleNamespace):\r\n        self.config = config\r\n    \r\n    @abstractmethod\r\n    def estimate(\r\n        self,\r\n        frame: SourceDataFrame,\r\n        kp: torch.Tensor,\r\n        depth_cov_map: torch.Tensor | None,\r\n        depth_map: torch.Tensor | None,\r\n        depth_cov: torch.Tensor | None,\r\n        flow_cov: torch.Tensor | None,\r\n    ) -> torch.Tensor:\r\n        ...\r\n  \n"})}),"\n",(0,o.jsx)(n.h3,{id:"methods-to-implement",children:"Methods to Implement"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"IObservationCov.estimate(self, ...) -> torch.Tensor"})}),"\n",(0,o.jsx)(n.p,{children:"Given N points, each with (u, v) coord, depth value, depth_cov, flow, and flow_cov, output a Nx3x3 tensor s.t. output[i] represents the 3x3 covariance matrix for the inverse-projected point in camera coordinate."}),"\n",(0,o.jsx)(n.p,{children:"Parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"frame"}),"     - ",(0,o.jsx)(n.code,{children:"SourceDataFrame"})," from GenericSequence."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"kp"}),"        - ",(0,o.jsx)(n.code,{children:"N * 2"})," FloatTensor, [[u0, v0], ...], uv coordinate of keypoints on current frame"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"depth_map"})," - ",(0,o.jsx)(n.code,{children:"H * W"})," FloatTensor, Dense depth map for current frame"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"depth_cov"})," - ",(0,o.jsx)(n.code,{children:"N"}),"     FloatTensor, [cov0, ...], depth covariance for each keypoint on current frame"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"flow_cov"}),"  - ",(0,o.jsx)(n.code,{children:"N * 2"})," FloatTensor, [[\u03c3\xb2u, \u03c3\xb2v], ...], covariance of flow on u and v direction for keypoint on current frame"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Returns:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cov_3d"})," - ",(0,o.jsx)(n.code,{children:"N*3*3"})," DoubleTensor, in order of ",(0,o.jsx)(n.code,{children:"zxy"})," - covariance of keypoint distribution in 3D space projected from the camera."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["The output covariance should have ",(0,o.jsx)(n.code,{children:"double"})," or ",(0,o.jsx)(n.code,{children:"float64"})," precision. Though this will lead to slower optimization and less computation-efficient, our experiment indicate that having high-precision covariance is crucial for the high-performance of MAC-VO. (i.e. using ",(0,o.jsx)(n.code,{children:"float32"})," for optimization will not work that well)"]})}),"\n",(0,o.jsx)(n.h2,{id:"implementations",children:"Implementations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"class NoCovariance(IObservationCov):"})}),"\n",(0,o.jsx)(n.p,{children:"Simply predicts identity covariance matrix for each observation."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"class DepthCovariance(IObservationCov):"})}),"\n",(0,o.jsxs)(n.p,{children:["Calculate the uncertainty with flow covariance set to ",(0,o.jsx)(n.code,{children:"0"})," (for both ",(0,o.jsx)(n.code,{children:"u"})," and ",(0,o.jsx)(n.code,{children:"v"})," direction). Note that this will result in a degenerated covariance matrix (with rank 1). Therefore, a regularization term is added to create a full-rank covariance matrix."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["\u2b50"," ",(0,o.jsx)(n.code,{children:"class MatchCovariance(IObservationCov):"})]}),"\n",(0,o.jsx)(n.p,{children:"Covariance projection model used and stated in the MAC-VO paper. Utilize the depth and flow covariance to jointly estimate the 3D covariance matrix of each observation / keypoint."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"class GaussianMixtureCovariance(IObservationCov):"})}),"\n",(0,o.jsx)(n.p,{children:"Model the depth uncertainty of matched keypoint using a Mixture-of-Guassian model instead of the weighted-variance model. See Figure 5.a) and Section III.C for more detail."}),"\n",(0,o.jsxs)(n.p,{children:["This model is ",(0,o.jsx)(n.strong,{children:"not"})," used by the MAC-VO nor appears in any ablation study."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"modifiers",children:"Modifiers"}),"\n",(0,o.jsx)(n.p,{children:'A modifier takes in an observation covariance model and generates a "new" model by tweaking the input / output of an existing model.'}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"class Modifier_Diagonalize(IObservationCov):"})}),"\n",(0,o.jsx)(n.p,{children:"Diagonalize the covariance model by discarding all the off-diagonal terms in 3x3 covariance matrix predicted by another model."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"class Modifier_Normalize(IObservationCov):"})}),"\n",(0,o.jsx)(n.p,{children:"On every call, it will forward everything to the internal model and normalize the output covariance matrices (by setting average determinant of all points to 1)."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var o=i(6540);const r={},t=o.createContext(r);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);